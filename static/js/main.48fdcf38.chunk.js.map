{"version":3,"sources":["components/images/theMovieDbLogo.svg","services/HttpUtility.tsx","services/MovieAPI.tsx","components/movieList/MovieList.tsx","components/searchBox/SearchBox.tsx","components/loader/Loader.tsx","components/app/App.tsx","components/movieDetail/MovieDetail.tsx","index.tsx"],"names":["http","request","a","fetch","response","json","body","movieUrlPrefix","apiKey","popularMoviesUrl","query","movieId","movieDetailUrl","Meta","Card","MovieList","movieInfo","style","margin","className","to","id","width","cover","vote_average","alt","src","poster_path","title","Date","release_date","toLocaleString","month","year","Search","Input","SearchBox","searchHandler","span","offset","placeholder","enterButton","size","onSearch","value","Loader","textAlign","App","useState","data","setData","error","setError","loading","setLoading","searchResultsText","setSearchResultsText","searchQuery","setSearchQuery","useEffect","searchMovie","then","resp","results","message","getPopularMovies","href","logo","type","gutter","justify","length","map","result","index","MovieDetail","useParams","isLoading","setIsLoading","movieDetail","setMovieDetail","getMovieDetail","backgroundImage","backdrop_path","original_title","minutes","hours","Math","round","minutesPart","getTimeInHoursAndMinutes","runtime","overview","ReactDOM","render","StrictMode","path","exactpath","document","getElementById"],"mappings":"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","file":"static/js/main.48fdcf38.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/theMovieDbLogo.da3f379f.svg\";","export async function http<T>(request: RequestInfo): Promise<T> {\n    const response = await fetch(request);\n    const body = await response.json();\n    return body;\n}","import { http } from \"./HttpUtility\";\nimport { PopularMoviesResponse } from \"../models/MovieList\";\nimport { MovieDetailResponse, MovieDetailImage } from \"../models/MovieDetail\";\n\nconst movieUrlPrefix = 'https://api.themoviedb.org/3';\nconst apiKey = '6ed12e064b90ae1290fa326ce9e790ff';\n\nexport async function getPopularMovies(): Promise<PopularMoviesResponse> {\n    const popularMoviesUrl = `${movieUrlPrefix}/movie/popular?api_key=${apiKey}&language=en-US&page=1`;\n    const response = await http<PopularMoviesResponse>(popularMoviesUrl);\n    return response;\n}\n\nexport async function searchMovie(query: string): Promise<PopularMoviesResponse> {\n    const popularMoviesUrl = `${movieUrlPrefix}/search/movie?api_key=${apiKey}&query=${query}&page=1`;\n    const response = await http<PopularMoviesResponse>(popularMoviesUrl);\n    return response;\n}\n\nexport async function getMovieDetail(movieId: number): Promise<MovieDetailResponse> {\n    const movieDetailUrl = `${movieUrlPrefix}/movie/${movieId}?api_key=${apiKey}`;\n    const response = await http<MovieDetailResponse>(movieDetailUrl);\n    return response;\n}\n\nexport async function getMovieImages(movieId: number): Promise<MovieDetailImage> {\n    const movieImageUrl = `${movieUrlPrefix}/movie/${movieId}/images?api_key=${apiKey}`;\n    const response = await http<MovieDetailImage>(movieImageUrl);\n    return response;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './MovieList.css';\nimport { PopularMovieModel } from '../../models/MovieList';\n\nimport { Card, Col } from 'antd';\n\nconst { Meta } = Card;\n\nexport const MovieList = (movieInfo: PopularMovieModel) => {\n    return (\n        <Col style={{ margin: '20px 0' }} className=\"gutter-row\" key={movieInfo.id}>\n            <div key={movieInfo.id} className=\"gutter-box\">\n                <Link key={movieInfo.id} to={`/movie/${movieInfo.id}`}>\n                    <Card key={movieInfo.id}\n                        style={{ width: 200 }}\n                        className=\"movie-card\"\n                        cover={\n                            <div>\n                                <span className={movieInfo.vote_average > 7 ? 'good-rating' : (movieInfo.vote_average > 4 ? 'medium-rating' : 'low-rating')}>{`${movieInfo.vote_average * 10}%`}</span>\n                                <img\n                                    alt=\"\"\n                                    src={`https://image.tmdb.org/t/p/w185${movieInfo.poster_path}`}\n                                />\n                            </div>\n                        }\n                    >\n                        <Meta title={movieInfo.title} className=\"title\"\n                        />\n                        <Meta className=\"release-date\"\n                            title={new Date(movieInfo.release_date).toLocaleString('default', { month: 'long', year: 'numeric' })}\n                        />\n                    </Card>\n                </Link>\n            </div>\n        </Col>\n    )\n}","import React from 'react';\nimport {Row, Col, Input} from 'antd';\n\nconst { Search } = Input;\n\nexport const SearchBox = ({searchHandler}: any) => {\n    return (\n        <Row>\n            <Col span={12} offset={6}>\n                <Search\n                    placeholder=\"Search\"\n                    enterButton\n                    size=\"large\"\n                    onSearch={value => searchHandler(value)}\n                />\n            </Col>\n        </Row>\n    )\n}\n","import React from 'react';\nimport { Spin } from 'antd';\n\nexport const Loader = () => (\n    <div style={{margin: '20px 0', textAlign: 'center'}}>\n        <Spin />\n    </div>\n)\n","import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport logo from '../images/theMovieDbLogo.svg';\nimport { PopularMovieModel } from '../../models/MovieList';\nimport { getPopularMovies, searchMovie } from '../../services/MovieAPI';\nimport { MovieList } from '../movieList/MovieList';\nimport { SearchBox } from '../searchBox/SearchBox';\nimport { Loader } from '../loader/Loader';\n\nimport { Row, Alert } from 'antd';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n\n  const [data, setData] = useState<PopularMovieModel[]>([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchResultsText, setSearchResultsText] = useState('Popular Movies');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    setData([]);\n    if (!searchQuery || searchQuery === '') {\n      setSearchResultsText('Popular Movies');\n      getPopularMovies()\n        .then(resp => {\n          setData(resp.results);\n          setLoading(false);\n        }, (message) => {\n          setError(message);\n          setLoading(false);\n        });\n    } else {\n      setSearchResultsText('Search Results');\n      searchMovie(searchQuery)\n        .then(resp => {\n          setData(resp.results);\n          setLoading(false);\n        }, (message) => {\n          setError(message);\n          setLoading(false);\n        })\n    }\n  }, [searchQuery]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"layout\">\n        <header className=\"header\">\n          <div className=\"logo-container\">\n            <a href=\"/\" className=\"logo\">\n              <img className=\"logo-image\" src={logo} alt=\"Movie Db\" />\n            </a>\n          </div>\n        </header>\n        <div className=\"content\">\n          <div className=\"search-box\">\n            <SearchBox searchHandler={setSearchQuery} /> <br />\n            {loading &&\n              <Loader />\n            }\n            {error !== null &&\n              <div style={{ margin: '20px 0' }}>\n                <Alert message={error} type=\"error\" />\n              </div>\n            }\n            <div className=\"popular-movies\">\n          <h1 className=\"heading\">{searchResultsText}</h1>\n            </div>\n            <Row gutter={16} justify=\"center\">\n              {data !== null && data.length > 0 && data.map((result, index) => (\n                <MovieList key={result.id}\n                  {...result}\n                />\n              ))}\n            </Row>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport './MovieDetail.css';\nimport { MovieDetailResponse } from '../../models/MovieDetail';\nimport { getMovieDetail } from '../../services/MovieAPI';\nimport { Loader } from '../loader/Loader';\n\nexport function MovieDetail() {\n\n    const { id } = useParams<{ id: string }>();\n    const [isLoading, setIsLoading] = useState(false);\n    const [movieDetail, setMovieDetail] = useState<MovieDetailResponse>();\n\n    useEffect(() => {\n        setIsLoading(true);\n        getMovieDetail(+id)\n            .then((response => {\n                setIsLoading(false);\n                setMovieDetail(response)\n            }))\n    }, [id])\n    const getTimeInHoursAndMinutes = (minutes?: number): string => {\n        if (!minutes) {\n            return '';\n        }\n        const hours = Math.round(minutes / 60);\n        const minutesPart = Math.round(minutes % 60);\n        return `${hours}h ${minutesPart} min`;\n    }\n    return (\n        <div className=\"main\">\n            {isLoading &&\n                <Loader />\n            }\n            <Link to={`/`}><div className=\"back-link\">&lt;</div></Link>\n            {movieDetail ?\n                (<div className=\"banner\" style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original/${movieDetail?.backdrop_path})` }}>\n                </div>) : null\n            }\n            <div className=\"content\">\n                <div className=\"card-image\">\n                    {movieDetail ? <img src={`https://image.tmdb.org/t/p/w185${movieDetail?.poster_path}`} alt=\"{movieDetail?.original_title}\"></img> : null}\n                </div>\n                <div className=\"heading-text\">\n                    <h2>\n                        {movieDetail?.original_title}\n                    </h2>\n                    <div className=\"info\">\n                        {movieDetail ? new Date(movieDetail?.release_date).toLocaleString('default', { year: 'numeric' }) : null}\n                        - {`${movieDetail ? (movieDetail?.vote_average * 10) : 0}% User Score`} <br />\n                        {getTimeInHoursAndMinutes(movieDetail?.runtime)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"movie-overview\">\n                <h2>Overview</h2><br />\n                {movieDetail?.overview}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/app/App';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { MovieDetail } from './components/movieDetail/MovieDetail';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/movie/:id\">\n          <MovieDetail />\n        </Route>\n        <Route exactpath=\"/\">\n          <App />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}